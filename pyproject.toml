[tool.poetry]
name = "dismantle"
version = "0.11.0"
description = "Python package / plugin / extension manager"
authors = ["Area28 Technologies <dev@area28.io>"]
license = "MIT"
readme = "README.md"
include = [
    "LICENSE",
    "README.md",
    "docs",
    "tests"
]
packages = [{ include = "dismantle", from = "src" }]
homepage = "https://github.com/area28technologies/dismantle"
repository = "https://github.com/area28technologies/dismantle"
documentation = "https://github.com/area28technologies/dismantle"
keywords = [
    "packaging",
    "dependency",
    "extension",
    "plugin",
    "module",
    "version"
]
classifiers = [
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]

[tool.poetry.dependencies]
python = "^3.7"
requests = "^2.25.1"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
bandit = "^1.7.0"
flakehell = "^0.9.0"
flake8-isort = "^4.0.0"
flake8-pytest = "^1.3"
flake8-simplify = "^0.14.1"
mypy-extensions = "^0.4.3"
pylint = "^2.8.2"
pep8-naming = "^0.11.1"
pytest-cov = "^3.0.0"
pytest-httpserver = "^1.0.2"
coverage = { extras = ["toml"], version = "^6.1.1" }
gitlint = "^0.15.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
dismantle = "dismantle.cli:main"

[tool.flakehell]
extended_default_ignore = []
format = 'grouped'
max_line_length = 79
max_complexity = 4
exclude = [".git", "__pycache__", "doc", "build", "tests", "dist", ".venv", ".pytest_cache", ".tox", "htmlcov"]

[tool.flakehell.plugins]
pycodestyle = ["+*"]
pyflakes = ["+*"]
"flake8-*" = ["+*"]
pylint = ["+F*", "+E*"]
pep8-naming = ["+*"]
mccabe = ["+*"]

[tool.flakehell.exceptions."tests/"]
pylint = ["-S101"]

[tool.pylint."MESSAGES CONTROL"]
enable = "all"

[tool.isort]
line_length = 79
combine_as_imports = true
balanced_wrapping = true
lines_after_imports = 2
lines_between_sections = -1
include_trailing_comma = false
multi_line_output = 3
color_output = true

[tool.coverage.run]
source = ['src']
