name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install poetry
        run: python -m pip install poetry

      - name: Load cached dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: python-venv-3.x-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/ci_cd.yml') }}

      - name: Install dependencies
        run: poetry install

      - name: Validate commits from PR
        if: ${{ github.event_name == 'pull_request' }}
        run: poetry run gitlint --commits "${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}"

  analyze:
      name: Analyze
      runs-on: ubuntu-latest
      permissions:
          actions: read
          contents: read
          security-events: write
      steps:
          - uses: actions/checkout@v2

          - name: Initialize CodeQL
            uses: github/codeql-action/init@v1

          - name: CodeQL Analysis
            uses: github/codeql-action/analyze@v1

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install poetry
        run: python -m pip install poetry

      - name: Load cached dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: python-venv-3.x-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/ci_cd.yml') }}

      - name: Install dependencies
        run: poetry install

      - name: Run coverage
        run: poetry run pytest tests --cov --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  test:
    name: Test & Linter
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install poetry
        run: python -m pip install poetry

      - name: Load cached dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: python-venv-${{ matrix.python }}-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/ci_cd.yml') }}

      - name: Install dependencies
        run: poetry install

      - name: Run Test for python${{ matrix.python }}
        run: poetry run pytest tests

      # Enable when linting issues are fixed and pre-commit hooks disabled
      # - name: Run Linter for python${{ matrix.python }}
      #  run: poetry run flakehell lint
